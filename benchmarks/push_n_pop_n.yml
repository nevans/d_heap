---
prelude: |
  system("#{RbConfig.ruby} bin/rake compile", err: :out, exception: true)
  require "d_heap/benchmarks"
  include DHeap::Benchmarks
  fill_random_vals

  n = ENV.fetch("BENCH_N", 1000).to_i

  i = 0

benchmark:
  - script: &script |
       while i < n
         q << random_val
         i += 1
       end
       while 0 < i
         q.pop
         i -= 1
       end
    name:    "push N + pop N (findmin)"
    prelude: "q = initq FindMin"
  - script: *script
    name:    "push N + pop N (bsearch)"
    prelude: "q = initq BSearch"
  - script: *script
    name:    "push N + pop N (rb_heap)"
    prelude: "q = initq RbHeap"
  - script: *script
    name:    "push N + pop N (c++ stl)"
    prelude: "q = initq CppSTL"
  - script: *script
    name:    "push N + pop N (c_dheap)"
    prelude: "q = initq DHeap"
